% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/warped_wavelet_reg.R
\name{warped_wavelet_reg}
\alias{warped_wavelet_reg}
\title{Function to fit a warped wavelet regression using the
wd function of the wavethresh package.}
\usage{
warped_wavelet_reg(
  x = NULL,
  y = NULL,
  wm_filter_num = 9,
  wm_family = "DaubLeAsymm",
  thresh_type = "hard",
  thresh_par = 1,
  n_levels = 1,
  boundary_handling = "periodic"
)
}
\arguments{
\item{x}{a vector with observations of the covariate/feature.}

\item{y}{a vector with observations of the response variable.}

\item{wm_filter_num}{the filter.number variable in the wavethresh::wd
function. The higher it is, the smoother the fitted functions are.}

\item{wm_family}{the wavelet family used in the wavethresh::wd function.}

\item{thresh_par}{tuning parameter used in the threshold of wavelet
coefficients. The threshold value is thresh_par * sqrt(log(n)/n).}

\item{n_levels}{number of levels used in the warped wavelet estimator.}

\item{boundary_handling}{boundary handling used in wavethresh 'bc' argument.}
}
\value{
A list with three elemets:
x: the sorted values of the feature
y_fit: fitted (predicted) values for sorted values in x
residuals: residuals of the regression (y - y_fit)
}
\description{
Function to fit a warped wavelet regression using the
wd function of the wavethresh package.
}
\examples{
x <- runif(50)
y = sin(2*pi * x) + rnorm(50)*.1
plot(x,y)
wave_reg <- warped_wavelet_reg(x=x, y=y, wm_filter_num=8,
                               wm_family="DaubLeAsymm", thresh_type = "hard",
                               thresh_par=1, n_levels=2)
lines(wave_reg$x,wave_reg$y_fit)

}
